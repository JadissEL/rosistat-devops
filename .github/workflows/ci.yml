name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Typecheck
        run: npm run typecheck
      - name: Test (frontend)
        run: npm test --silent
      - name: Backend smoke tests
        working-directory: ./backend
        run: |
          npm ci
          npm run build
          npm run test:smoke

  docker-backend:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: lower-owner
        name: Lowercase owner for GHCR tag
        run: echo "owner=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
      - name: Read backend version
        id: pkg
        run: echo "version=$(jq -r .version backend/package.json)" >> $GITHUB_OUTPUT

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/jadissel/rosistat-backend:latest
            ghcr.io/jadissel/rosistat-backend:${{ steps.pkg.outputs.version }}

  vercel-deploy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Vercel deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"
          vercel build --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"
          vercel deploy --prebuilt --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

